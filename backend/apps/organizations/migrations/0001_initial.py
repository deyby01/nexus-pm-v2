# Generated by Django 4.2.8 on 2025-10-22 21:10

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Organization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier for this organization",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Organization name (e.g., 'Acme Corporation')",
                        max_length=100,
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly identifier (e.g., 'acme-corp' for acme-corp.nexuspm.com)",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Optional description of the organization"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("suspended", "Suspended"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        help_text="Current status of the organization",
                        max_length=20,
                    ),
                ),
                (
                    "logo",
                    models.ImageField(
                        blank=True,
                        help_text="Organization logo for branding",
                        null=True,
                        upload_to="organization_logos/%Y/%m/",
                    ),
                ),
                (
                    "website",
                    models.URLField(blank=True, help_text="Organization website URL"),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Primary contact email for the organization",
                        max_length=254,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        help_text="Primary contact phone number",
                        max_length=20,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be in format: '+999999999'",
                                regex="^\\+?1?\\d{9,15}$",
                            )
                        ],
                    ),
                ),
                ("address_line1", models.CharField(blank=True, max_length=255)),
                ("address_line2", models.CharField(blank=True, max_length=255)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                (
                    "country",
                    models.CharField(
                        blank=True, help_text="ISO country code", max_length=2
                    ),
                ),
                (
                    "settings",
                    models.JSONField(
                        default=dict,
                        help_text="Organization-wide settings and preferences",
                    ),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(
                        blank=True,
                        help_text="Stripe Customer ID for billing",
                        max_length=100,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Organization",
                "verbose_name_plural": "Organizations",
                "db_table": "organizations_organization",
            },
        ),
        migrations.CreateModel(
            name="SubscriptionPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Display name for the plan (e.g., 'Professional')",
                        max_length=50,
                    ),
                ),
                (
                    "plan_type",
                    models.CharField(
                        choices=[
                            ("free", "Free"),
                            ("starter", "Starter"),
                            ("professional", "Professional"),
                            ("enterprise", "Enterprise"),
                        ],
                        help_text="Internal identifier for the plan type",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Marketing description of the plan"
                    ),
                ),
                (
                    "price_monthly",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Monthly price in USD",
                        max_digits=10,
                    ),
                ),
                (
                    "price_yearly",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Yearly price in USD (usually discounted)",
                        max_digits=10,
                    ),
                ),
                (
                    "max_workspaces",
                    models.PositiveIntegerField(
                        help_text="Maximum number of workspaces allowed"
                    ),
                ),
                (
                    "max_users",
                    models.PositiveIntegerField(
                        help_text="Maximum number of users in the organization"
                    ),
                ),
                (
                    "max_storage_gb",
                    models.PositiveIntegerField(
                        help_text="Maximum storage in GB for file uploads"
                    ),
                ),
                (
                    "max_projects_per_workspace",
                    models.PositiveIntegerField(
                        default=100, help_text="Maximum projects per workspace"
                    ),
                ),
                (
                    "features",
                    models.JSONField(
                        default=dict,
                        help_text="Available features as JSON (e.g., {'time_tracking': True, 'api_access': False})",
                    ),
                ),
                (
                    "stripe_price_id_monthly",
                    models.CharField(
                        blank=True,
                        help_text="Stripe Price ID for monthly billing",
                        max_length=100,
                    ),
                ),
                (
                    "stripe_price_id_yearly",
                    models.CharField(
                        blank=True,
                        help_text="Stripe Price ID for yearly billing",
                        max_length=100,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this plan is available for new subscriptions",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Subscription Plan",
                "verbose_name_plural": "Subscription Plans",
                "db_table": "organizations_subscription_plan",
                "ordering": ["price_monthly"],
            },
        ),
        migrations.CreateModel(
            name="OrganizationMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "Owner"),
                            ("admin", "Administrator"),
                            ("member", "Member"),
                            ("viewer", "Viewer"),
                        ],
                        default="member",
                        help_text="User's role within this organization",
                        max_length=20,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this membership is currently active",
                    ),
                ),
                (
                    "invited_at",
                    models.DateTimeField(
                        blank=True, help_text="When the invitation was sent", null=True
                    ),
                ),
                (
                    "joined_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When the user joined the organization",
                    ),
                ),
                (
                    "last_active_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When the user was last active in this organization",
                    ),
                ),
                (
                    "invited_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who invited this member (if applicable)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_organization_invites",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization the user belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="organizations.organization",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="User who is a member of the organization",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="organization_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Organization Membership",
                "verbose_name_plural": "Organization Memberships",
                "db_table": "organizations_membership",
            },
        ),
        migrations.AddField(
            model_name="organization",
            name="members",
            field=models.ManyToManyField(
                help_text="Users who are members of this organization",
                related_name="organizations",
                through="organizations.OrganizationMembership",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="organization",
            name="owner",
            field=models.ForeignKey(
                help_text="User who owns and has full control over this organization",
                on_delete=django.db.models.deletion.PROTECT,
                related_name="owned_organizations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Subscription",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("trialing", "Trial Period"),
                            ("past_due", "Payment Failed"),
                            ("cancelled", "Cancelled"),
                            ("unpaid", "Unpaid"),
                        ],
                        help_text="Current status of the subscription",
                        max_length=20,
                    ),
                ),
                (
                    "billing_cycle",
                    models.CharField(
                        choices=[("monthly", "Monthly"), ("yearly", "Yearly")],
                        help_text="How often the customer is billed",
                        max_length=10,
                    ),
                ),
                (
                    "stripe_subscription_id",
                    models.CharField(
                        blank=True,
                        help_text="Stripe Subscription ID for payment processing",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "current_period_start",
                    models.DateTimeField(
                        help_text="Start date of the current billing period"
                    ),
                ),
                (
                    "current_period_end",
                    models.DateTimeField(
                        help_text="End date of the current billing period"
                    ),
                ),
                (
                    "trial_start",
                    models.DateTimeField(
                        blank=True, help_text="When the trial period started", null=True
                    ),
                ),
                (
                    "trial_end",
                    models.DateTimeField(
                        blank=True, help_text="When the trial period ends", null=True
                    ),
                ),
                (
                    "cancelled_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When the subscription was cancelled",
                        null=True,
                    ),
                ),
                (
                    "cancel_at_period_end",
                    models.BooleanField(
                        default=False,
                        help_text="Whether to cancel at the end of the current period",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "organization",
                    models.ForeignKey(
                        help_text="Organization that owns this subscription",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subscriptions",
                        to="organizations.organization",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        help_text="The plan this subscription is for",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="subscriptions",
                        to="organizations.subscriptionplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subscription",
                "verbose_name_plural": "Subscriptions",
                "db_table": "organizations_subscription",
                "indexes": [
                    models.Index(
                        fields=["organization", "status"],
                        name="organizatio_organiz_85249e_idx",
                    ),
                    models.Index(
                        fields=["stripe_subscription_id"],
                        name="organizatio_stripe__045cf6_idx",
                    ),
                    models.Index(
                        fields=["current_period_end"],
                        name="organizatio_current_c42776_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="organizationmembership",
            index=models.Index(
                fields=["organization", "role"], name="organizatio_organiz_e82976_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="organizationmembership",
            index=models.Index(
                fields=["user", "is_active"], name="organizatio_user_id_9eceb5_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="organizationmembership",
            unique_together={("user", "organization")},
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(fields=["slug"], name="organizatio_slug_048085_idx"),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(fields=["owner"], name="organizatio_owner_i_370edd_idx"),
        ),
        migrations.AddIndex(
            model_name="organization",
            index=models.Index(
                fields=["status", "created_at"], name="organizatio_status_54bdfc_idx"
            ),
        ),
    ]
